#pragma once

#ifndef WORLD_H
#define WORLD_H

#include <memory>

#include "Chunk.h"
#include "Shader.h"

// size of world in chunks
// can also be thought of as 'render distance'
const unsigned int WORLD_WIDTH = 2;
const unsigned int WORLD_DEPTH = WORLD_WIDTH;
const unsigned int WORLD_AREA  = WORLD_DEPTH * WORLD_WIDTH;

class World
{
public:
    World();
    ~World();

    Shader chunk_shader = Shader(RESOURCES_PATH "shaders/chunk.vert", RESOURCES_PATH "shaders/chunk.frag");

    void draw() const;

    friend class Chunk;

private:
    std::vector<std::shared_ptr<Chunk>> m_chunks;
    // std::vector<WorldPosition> m_chunk_positions;
};

#endif